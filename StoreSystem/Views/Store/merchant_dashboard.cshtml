@{
    ViewData["Title"] = "商品管理";
}    
<main class="container py-4">
<div class="d-flex align-items-center justify-content-between mb-3">
  <h1 class="h4 mb-0">商品管理</h1>
        <a class="btn btn-primary" href="@Url.Action("product_form","Store")">新增商品</a>
</div>
<div class="card shadow-sm">
  <div class="card-body">
    <div class="table-responsive">
      <table class="table align-middle">
        <thead>
          <tr>
            <th>ID</th>
            <th>商品</th>
            <th>價格</th>
            <th>庫存</th>
            <th class="text-end">操作</th>
          </tr>
        </thead>
        <tbody id="merchant-products"></tbody>
      </table>
    </div>
  </div>
</div>
    </main>

@section Scripts{
    <script>

        /* --- 初始化：根據頁面呼叫對應渲染 --- */
        document.addEventListener("DOMContentLoaded", () => {

            GetProducts();
        });

        function GetProducts(){
            axios({
                url:"@Url.Action("GetProducts","Store")",
                method:"post"
            }).then((resp) => {
                renderMerchantProducts(resp.data);
            })
        }

        /* --- Merchant dashboard (假資料) --- */
        function renderMerchantProducts(products) {
            const tbody = document.getElementById("merchant-products");
            if (!tbody) return;
            const html = products.map(p => `
            <tr>
              <td>${p.productId}</td>
              <td>
                <div class="d-flex align-items-center gap-2">
                  <img src="@Url.Action("Image","File")?id=${p.imageId}" class="rounded object-cover" width="40" height="40">
                  <div>
                    <div class="fw-semibold">${p.name}</div>
                    <div class="text-secondary small">${p.description}</div>
                  </div>
                </div>
              </td>
              <td>${p.price}</td>
              <td>${p.quantity}</td>
              <td class="text-end">
                        <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("product_form", "Store")?ProductId=${p.productId}">編輯</a>
                <button class="btn btn-sm btn-outline-danger ms-1" onclick="Delete(${p.productId})">刪除</button>
              </td>
            </tr>
          `).join("");
            tbody.innerHTML = html;
        }

        function Delete(id) {
            axios({
                url: "@Url.Action("DeleteProduct", "Store")",
                params: {
                    ProductId: id
                },
                method: "post"
            }).then((res) => {
                alert("刪除成功");
                GetProducts();
            }).catch((errorInfo) => {
                alert(errorInfo);
            });
        }
    </script>
}